syntax = "proto3";

package com.altium.eis.custom;

option java_package = "com.altium.eis.custom";
option java_multiple_files = true;
option csharp_namespace = "Altium.PLM.Custom";

message Credentials {
    string username = 1;
    string password = 2;
}

message Auth {
    string plm_url = 1;
    oneof data {
        string auth_token = 2;
        Credentials credentials = 3;
    }
    repeated string licenses = 4;
    string context = 5;
}

message TypeId {
    string name = 1;
    string id = 2;
    string api_name = 3;
    BaseType base_type = 4;
}

enum BaseType {
    ITEM = 0;
    CHANGE = 1;
}

message Value {
    oneof typed_value {
        string string_value = 1;
        bool bool_value = 2;
        double double_value = 3;
        float float_value = 4;
        int64 int_value = 5;
        int64 date_value = 6;
        Id reference_value = 7;
        UomValue uom_value = 8;
        ListValue list_value = 9;
    }
}

message ListValue {
    string id = 1;
    Value value = 2;
}

message UomValue {
    string unit_name = 1;
    double unit_value = 2;
}

message AttributeSpec {
    enum Datatype {
        TEXT = 0;
        NUMBER = 1;
        DATE = 2;
        UOM = 3;
        OBJECT = 4;
        BOOLEAN = 5;
        DOUBLE = 6;
        INTEGER = 7;
        CLASSIFICATION = 8;
    }
    enum Valueset {
        FREE = 0;
        LIST = 1;
        HYBRID = 2;
    }
    string id = 1;
    string api_name = 2;
    string name = 3;
    string category = 4;
    bool multi_valued = 5;
    bool read_only = 6;
    bool required = 7;
    bool built_in = 8;
    string uom_family_name = 9;
    Datatype data_type = 10;
    Valueset valueset_type = 11;
    repeated ListValue list_values = 12;
}

enum RelationshipType {
    BOM = 0;
    ATTACHMENTS = 1;
    MANUFACTURER_PARTS = 2;
    AFFECTED_ITEMS = 3;
}

message RelationshipSpec {
    RelationshipType type = 1;
    repeated AttributeSpec attributes = 2;
}

message Type {
    TypeId id = 1;
    repeated AttributeSpec attributes = 2;
    repeated RelationshipSpec relationships = 3;
}

message Error {
    string message = 1;
}

message ItemResult {
    oneof result {
        Error error = 1;
        Item item = 2;
    }
}

message Item {
    Id id = 1;
    repeated AttributeValue values = 2;
    string link = 3;
}

message Id {
    string public_id = 1;
    string private_id = 2;
    TypeId type_id = 3;
}

message AttributeValue {
    string attribute_id = 1;
    repeated Value value = 2;
}

message NumberingFormat {
    string id = 1;
    TypeId type_id = 2;
    map<string, string> fields = 3;
}

message ItemCreateSpec {
    NumberingFormat autonumber = 1;
    Type metadata = 2;
    repeated AttributeValue values = 3;
    Id specific_id = 4;
}

message ItemUpdateSpec {
    Id id = 1;
    Type metadata = 2;
    repeated AttributeValue values = 3;
}

message TypeRequest {
    Auth auth = 1;
    BaseType base_type = 2;
}

message TypeIdRequest {
    Auth auth = 1;
    repeated TypeId data = 2;
}

message IdRequest {
    Auth auth = 1;
    repeated Id data = 2;
}

message ItemCreateRequest {
    Auth auth = 1;
    repeated ItemCreateSpec data = 2;
}

message ItemUpdateRequest {
    Auth auth = 1;
    repeated ItemUpdateSpec data = 2;
}

message AuthResult {
    enum Status {
        SUCCESS = 0;
        INVALID_CREDENTIALS = 1;
        NO_LICENSE = 2;
        ERROR = 3;
        OPERATION_IN_PROGRESS = 4;
        INVALID_CONTEXT = 5;
    }

    bool success = 1;
    Status status = 2;
}

message Void {
}

message QueryAttribute {
    enum Occurrence {
        SHOULD = 0;
        MUST = 1;
    }

    string name = 1;
    string value = 2;
    Occurrence occurrence = 3;
}

message Query {
    string type = 1;
    repeated QueryAttribute attrs = 2;
    string folder_path = 3;
    int64 modify_date = 4;
    int64 max_rows = 5;
}

message QueryItemsRequest {
    Auth auth = 1;
    Type type = 2;
    Query query = 3;
}

message RelationshipRow {
    string id = 1;
    repeated AttributeValue attributes = 2;
    Id child_id = 3;
    string file_name = 4;
    string file_id = 5;
}

message FileResource {
    string file_name = 1;
    bytes data = 2;
}

message FileResourceResponse {
    string id = 1;
}

message Revision {
    string name = 1;
    string change_number = 2;
}

message RelationshipTable {
    Id id = 1;
    RelationshipType type = 2;
    Id red_line_change = 3;
    Revision revision = 4;
    repeated RelationshipRow rows = 5;
}

message RelationshipRequest {
    Auth auth = 1;
    repeated Id ids = 2;
    RelationshipType type = 3;
}

message CreateRelationshipsRequest {
    Auth auth = 1;
    repeated RelationshipTable relationships = 2;
    repeated Type metadata = 3;
}

message OperationSupportedRequest {
    Auth auth = 1;
    Operation operation = 2;

    enum Operation {
        CREATE_CHANGE_ORDER = 0;
        EXTRACT_PART_CHOICES_FROM_ATTRIBUTES = 1;
        INCREMENTAL_PART_CHOICES_SYNC = 2;
        ADVANCE_CHANGE_ORDER = 3;
        CREATE_INFO_NUMBERING = 4;
        PUBLISH_WITH_NO_BOM_SECTION_IN_CONFIG = 5;
        CREATE_MFR_PARTS = 6;
    }
}

message OperationSupportedResponse {
    bool is_supported = 1;
}

message AdvanceStateRequest {
    Auth auth = 1;
    Id id = 2;
}

service PLMService {
    rpc TestAccess (Auth) returns (AuthResult);
    rpc ReadTypeIdentifiers (TypeRequest) returns (stream TypeId);
    rpc ReadTypes (TypeIdRequest) returns (stream Type);
    rpc ReadItems (IdRequest) returns (stream Item);
    rpc CreateItems (ItemCreateRequest) returns (stream ItemResult);
    rpc DeleteItems (IdRequest) returns (Void);
    rpc QueryItems (QueryItemsRequest) returns (stream Id);
    rpc UpdateItems (ItemUpdateRequest) returns (stream ItemResult);
    rpc UploadFile (FileResource) returns (FileResourceResponse);
    rpc CreateRelationships (CreateRelationshipsRequest) returns (Void);
    rpc ReadRelationships (RelationshipRequest) returns (stream RelationshipTable);
    rpc IsOperationSupported (OperationSupportedRequest) returns (OperationSupportedResponse);
    rpc AdvanceState (AdvanceStateRequest) returns (Void);
}
